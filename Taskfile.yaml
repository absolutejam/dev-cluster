version: "3"

env:
  CDK8S_CHECK_UPGRADE: false
  K3D_CLUSTER: lab
  # KUBECONFIG: ./secrets/kubeconfig.yaml

includes:
  validation:
    dir: ./3-validation
    taskfile: ./3-validation/Taskfile.yaml

  services:
    dir: ./2-services
    taskfile: ./2-services/Taskfile.yaml

  docs:
    dir: ./docs
    taskfile: ./docs/Taskfile.yaml

tasks:
  #-------------------------------------------------------------------------------
  # High level
  #-------------------------------------------------------------------------------

  up:
    desc: ðŸš€ Bootstraps the cluster core
    cmds:
      - task: deps:check
      - task: dev:gen-ca
      - task: clean
      - task: services:transpile
      - task: cluster:up
      - task: dev:build-woodpecker-image

      # Core
      - task: services:deploy:core
      - task: validation:pki

      # Gitea
      - task: services:deploy:gitea

      # Woodpecker
      - task: services:deploy:woodpecker
      - task: dev:gen-woodpecker-oauth-client

  down:
    cmds:
      - k3d cluster rm --config 1-cluster/k3d.yaml

  clean:
    desc: Clean any temporary files
    cmds:
      # TODO: Use `git clean`?
      - rm secrets/kubeconfig.yaml || true
      - rm secrets/woodpecker-oauth2-client.json || true

  #-------------------------------------------------------------------------------
  # Cluster
  #-------------------------------------------------------------------------------

  cluster:up:
    desc: Spin up the K3d cluster
    env:
      KUBECONFIG: "" # to get Kubeconfig merged
    dir: ./1-cluster
    cmds:
      - silent: true
        cmd: |
          cluster_output=$(k3d cluster ls --no-headers | grep "{{ .K3D_CLUSTER }}" || true)

          if [ -n "${cluster_output}" ]; then
            cat <<EOF
          Cluster already exists.

          Run the following to remove it:

              k3d cluster rm {{ .K3D_CLUSTER }}

          EOF
          else
            if [ {{ .USE_CALICO | default "false" }} == "true" ]; then 
              extra_args="--volume \"$(pwd)/manifests:/var/lib/rancher/k3s/server/manifests/calico.yaml@server:*\""
              extra_args="${extra_args} --flannel-backend=\"none@server:*\""
            fi

            k3d cluster create --config k3d.yaml ${extra_args}
          fi

          k3d kubeconfig get lab > ../secrets/kubeconfig.yaml

          kubectl wait pod \
            --namespace kube-system \
            -l k8s-app=kube-dns \
            --for=condition=ready \
            --timeout=300s

  #-------------------------------------------------------------------------------
  # Dependencies
  #-------------------------------------------------------------------------------

  deps:check:
    desc: Checks all required tools are installed
    cmds:
      - which k3d > /dev/null
      - which kubectl > /dev/null

  deps:install:
    desc: Install required binaries & tools
    cmds:
      - task: deps:install:k3d
      - task: deps:install:cdk8s
      - task: deps:install:kubeseal
      - task: deps:install:istioctl

  deps:install:kubeseal:
    cmd: if ! which kubeseal; then brew install kubeseal; fi

  deps:install:istioctl:
    cmd: if ! which istioctl; then brew install istiocl; fi

  deps:install:k3d:
    cmd: if ! which k3d; then brew install k3d; fi

  deps:install:cdk8s:
    cmd: if ! which cdk8s; then pnpm install -g cdk8s-cli; fi

  #-------------------------------------------------------------------------------
  # Dev tasks
  #-------------------------------------------------------------------------------

  dev:gen-npm-token:
    desc: Generate an access token for (p)npm
    env:
      SCOPES: '["write:organization"]'
    cmds:
      - ./bin/gitea_generate_npm_token.sh

  dev:create-npm-config:
    desc: Create the NPM config for publishing & pulling packages
    env:
      USER: gitea-admin
      PERSONAL_ACCESS_TOKEN: TODO
      GITEA_API: dev-cluster.local/gitea/api/
      REGISTRY_SCOPE: "@devcluster:registry"
      SCOPES: '["write:organization"]'
    dir: 2-services
    cmds:
      - |
        pnpm config set ${SCOPE} https://${GITEA_API}/packages/${USER}/npm/
        pnpm config set -- '//${GITEA_API}/packages/${USER}/npm/:_authToken' "${PERSONAL_ACCESS_TOKEN}"

  dev:gen-woodpecker-oauth-client:
    desc: Generates a Gitea client for Woodpecker to use
    cmd: ./bin/gitea_generate_woodpecker_oauth_client.sh

  dev:gen-repo:
    desc: Generates a repo
    env:
      SERVICE: "{{ .CLI_ARGS }}"
    cmd: ./bin/gitea_create_repo.sh

  dev:gen-ca:
    desc: Generate a CA cert, if one does not already exist
    dir: pki
    cmds:
      - silent: true
        cmd: |
          if [ -f "ca.pem" ]; then
            echo "CA cert already exists"
            exit 0
          fi

          cfssl gencert -initca ca-csr.json | cfssljson -bare ca -

  dev:trust-ca:
    desc: Trusts the generated CA cert
    dir: pki
    preconditions:
      - sh: "[ -f ca.pem ]"
        msg: CA cert does not exist
    cmd: |
      sudo security add-trusted-cert \
        -d \
        -r trustRoot \
        -k /Library/Keychains/System.keychain \
        ca.pem

  dev:build-woodpecker-image:
    desc: Build woodpecker plugin-git image
    vars:
      IMAGE_NAME: woodpecker/plugin-git
      REGISTRY: k3d-registry.localhost:5000
    cmds:
      - cp pki/ca.pem 99-others/woodpecker/plugin-git
      - docker build -t {{ .REGISTRY }}/{{ .IMAGE_NAME }} 99-others/woodpecker/plugin-git
      - docker push {{ .REGISTRY }}/{{ .IMAGE_NAME }}

  dev:tools:
    desc: Spin up a tools Pod in provided namespace
    interactive: true
    vars:
      POD_NAME: tools
      NAMESPACE: '{{ .CLI_ARGS | default "default" }}'
      IMAGE: alpine:latest
    cmds:
      - kubectl -n {{ .NAMESPACE }} run {{ .POD_NAME }} --image={{ .IMAGE }} --command -- sleep infinity || true
      - kubectl -n {{ .NAMESPACE }} wait --for=condition=ready pod/{{ .POD_NAME }} --timeout=30s
      - kubectl -n {{ .NAMESPACE }} exec {{ .POD_NAME }} -it -- sh

  dev:add-helm-repos:
    desc: Adds all Helm repos
    cmds:
      - helm repo add istio https://istio-release.storage.googleapis.com/charts
      - helm repo add traefik https://traefik.github.io/charts
      - helm repo add gitea-charts https://dl.gitea.com/charts
      - helm repo add sealed-secrets https://bitnami-labs.github.io/sealed-secrets
      - helm repo add woodpecker https://woodpecker-ci.org
      - helm repo add crossplane-stable https://charts.crossplane.io/stable
      - helm repo add kiali https://kiali.org/helm-charts
      - helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard
      - helm repo add mysqloperator https://
      - helm repo add falcosecurity https://falcosecurity.github.io/charts
      - helm repo update
      - helm repo ls
